{"version":3,"sources":["components/TodoItem.tsx","components/TodoList.tsx","api/users.ts","components/App.tsx","api/todos.ts","index.tsx"],"names":["TodoItem","userName","userEmail","title","completed","className","classNames","TodoList","todos","map","todo","user","name","email","id","users","username","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","userId","currentTodo","currentUser","find","App","useState","toDoTitle","setTodoTitle","toDoStatus","setTodoStatus","selectUser","setSelectUser","isClicked","setIsClicked","isValidTitle","length","isValidChooseInput","isValidInput","onSubmit","event","preventDefault","selectedUser","maxID","sort","a","b","newTodo","replaceAll","push","contentEditable","value","placeholder","onChange","target","changeTodoStatus","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22cc9496.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './TodoItem.scss';\n\ntype Props = {\n  userName: string;\n  userEmail: string;\n  title: string;\n  completed: boolean;\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  userName,\n  userEmail,\n  title,\n  completed,\n}) => (\n  <>\n    <p>\n      {`Name: ${userName}`}\n    </p>\n    <p>\n      {`Email: ${userEmail}`}\n    </p>\n    <p className={classNames(completed\n      ? 'completed'\n      : 'active')}\n    >\n      {`To do: ${title}`}\n    </p>\n  </>\n);\n","import React from 'react';\nimport { Todo } from '../types/Todo';\nimport './TodoList.scss';\nimport { TodoItem } from './TodoItem';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul>\n    {todos.map(todo => (\n      <div className=\"todo_item\">\n        <li key={todo.id}>\n          {todo.user\n            ? (\n              <TodoItem\n                userName={todo.user.name}\n                userEmail={todo.user.email}\n                title={todo.title}\n                completed={todo.completed}\n              />\n            )\n            : (\n              null\n            )}\n        </li>\n      </div>\n    ))}\n  </ul>\n);\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './TodoList';\nimport { Todo } from '../types/Todo';\n\nimport users from '../api/users';\nimport todos from '../api/todos';\n\nconst preparedTodos: Todo[] = todos.map((currentTodo) => {\n  const currentUser = users.find(user => currentTodo.userId === user.id);\n\n  return {\n    user: currentUser || null,\n    ...currentTodo,\n  };\n});\n\nconst App: React.FC = () => {\n  const [toDoTitle, setTodoTitle] = useState('');\n  const [toDoStatus, setTodoStatus] = useState(false);\n  const [selectUser, setSelectUser] = useState('Choose a user');\n  const [isClicked, setIsClicked] = useState(false);\n\n  const isValidTitle = toDoTitle.length > 0;\n  const isValidChooseInput = selectUser !== 'Choose a user';\n  const isValidInput = isValidTitle && isValidChooseInput;\n\n  const addNewTodo = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    if (isValidInput) {\n      const selectedUser = users.find(user => user.name === selectUser);\n      const maxID = [...preparedTodos].sort((a, b) => b.id - a.id)[0].id + 1;\n\n      const newTodo = {\n        user: selectedUser || null,\n        userId: selectedUser?.id,\n        id: maxID,\n        title: toDoTitle.replaceAll(/[^a-zA-Z ЁёА-я ЯЄI яєі 0-9]/g, ''),\n        completed: toDoStatus,\n      };\n\n      preparedTodos.push(newTodo);\n\n      setTodoTitle('');\n      setTodoStatus(false);\n      setSelectUser('Choose a user');\n      setIsClicked(false);\n    }\n  };\n\n  const changeTodoStatus = (event: string) => {\n    if (event === 'Completed') {\n      setTodoStatus(true);\n    } else {\n      setTodoStatus(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"form\">\n        <form onSubmit={addNewTodo}>\n          <label>\n            <textarea\n              className=\"input_title\"\n              contentEditable\n              value={toDoTitle}\n              placeholder=\"Title\"\n              onChange={(event) => {\n                setTodoTitle(event.target.value);\n              }}\n            />\n            {(!isValidTitle && isClicked)\n            && <p className=\"error\">Please, enter the title!</p>}\n          </label>\n\n          <label>\n            <select\n              onChange={(event) => changeTodoStatus(event.target.value)}\n              value={!toDoStatus ? 'In progress' : 'Completed'}\n            >\n              <option value=\"Completed\">\n                Completed\n              </option>\n              <option value=\"In progress\">\n                In progress\n              </option>\n            </select>\n          </label>\n\n          <label>\n            <select\n              id={selectUser}\n              value={selectUser}\n              onChange={(event) => {\n                setSelectUser(event.target.value);\n              }}\n            >\n              <option>\n                Choose a user\n              </option>\n              {users.map(user => (\n                <option\n                  key={user.id}\n                  value={user.name}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {(!isValidChooseInput && isClicked)\n          && <p className=\"error\">Please, choose a user!</p>}\n\n          <button\n            type=\"submit\"\n            onClick={() => setIsClicked(true)}\n          >\n            Add new todo\n          </button>\n        </form>\n      </div>\n\n      <div className=\"todo_list\">\n        <TodoList todos={preparedTodos} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}